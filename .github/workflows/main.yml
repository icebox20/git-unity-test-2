name: Conscious Integration

on:
  push:
    branches: 
      - william
      - andy
      - angus
      - johnny
      - agon

jobs:

  merge:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2
      with:
        ref: master

    - name: Install UnityYAMLMerge
      run: |
        git config --local merge.tool unityyamlmerge
        git config --local mergetool.unityyamlmerge.trustExitCode true
        git config --local mergetool.unityyamlmerge.cmd "'${{ github.workspace }}\.github\workflows\UnityYAMLMerge.exe'  merge -p -o mergeConflicts.txt --describe -h `"`$BASE`" `"`$REMOTE`" `"`$LOCAL`" `"`$MERGED"
    
    - uses: oleksiyrudenko/gha-git-credentials@v1
      with:
        token: '${{ secrets.GITHUB_TOKEN }}'
        
    - name: Fetch and Checkout
      run: |
        git fetch 
        git checkout ${GITHUB_REF##*/}
        git checkout develop
      shell: bash

    - name: Normal Merge
      run: |
        git merge ${{ github.ref }}
        git status

    - name: YAML Merge
      run: git mergetool --tool=unityyamlmerge --no-prompt

    - name: Commit
      run: |
        git commit -m "Automatic Merge with UnityYAMLMerge"
        git status
        ls ${{ github.workspace }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
          name: mergeConflicts
          path: mergeConflicts.txt

    - name: Push Develop
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: 'develop'

    - name: Merge back into User
      run: |
        git fetch 
        git checkout ${GITHUB_REF##*/}
        git merge develop -X theirs
      shell: bash

    - name: Push User
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  build:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ${{ github.workspace }}
        unityVersion:
          - 2019.3.13f1
        targetPlatform:
          - StandaloneWindows64 # Build a Windows standalone.
          #- StandaloneWindows64 # Build a Windows 64-bit standalone.

    steps:

      - uses: actions/checkout@v2
        with:
          lfs: true
          ref: master

      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: webbertakken/unity-builder@<version>
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build